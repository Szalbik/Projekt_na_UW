//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aplikacja_na_projekt.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webserviceX.NET/", ConfigurationName="ServiceReference2.ConvertWeightsSoap")]
    public interface ConvertWeightsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webserviceX.NET/ConvertWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double ConvertWeight(double Weight, Aplikacja_na_projekt.ServiceReference2.WeightUnit FromUnit, Aplikacja_na_projekt.ServiceReference2.WeightUnit ToUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webserviceX.NET/ConvertWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<double> ConvertWeightAsync(double Weight, Aplikacja_na_projekt.ServiceReference2.WeightUnit FromUnit, Aplikacja_na_projekt.ServiceReference2.WeightUnit ToUnit);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webserviceX.NET/")]
    public enum WeightUnit {
        
        /// <remarks/>
        Grains,
        
        /// <remarks/>
        Scruples,
        
        /// <remarks/>
        Carats,
        
        /// <remarks/>
        Grams,
        
        /// <remarks/>
        Pennyweight,
        
        /// <remarks/>
        DramAvoir,
        
        /// <remarks/>
        DramApoth,
        
        /// <remarks/>
        OuncesAvoir,
        
        /// <remarks/>
        OuncesTroyApoth,
        
        /// <remarks/>
        Poundals,
        
        /// <remarks/>
        PoundsTroy,
        
        /// <remarks/>
        PoundsAvoir,
        
        /// <remarks/>
        Kilograms,
        
        /// <remarks/>
        Stones,
        
        /// <remarks/>
        QuarterUS,
        
        /// <remarks/>
        Slugs,
        
        /// <remarks/>
        weight100UScwt,
        
        /// <remarks/>
        ShortTons,
        
        /// <remarks/>
        MetricTonsTonne,
        
        /// <remarks/>
        LongTons,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConvertWeightsSoapChannel : Aplikacja_na_projekt.ServiceReference2.ConvertWeightsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConvertWeightsSoapClient : System.ServiceModel.ClientBase<Aplikacja_na_projekt.ServiceReference2.ConvertWeightsSoap>, Aplikacja_na_projekt.ServiceReference2.ConvertWeightsSoap {
        
        public ConvertWeightsSoapClient() {
        }
        
        public ConvertWeightsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConvertWeightsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertWeightsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertWeightsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ConvertWeight(double Weight, Aplikacja_na_projekt.ServiceReference2.WeightUnit FromUnit, Aplikacja_na_projekt.ServiceReference2.WeightUnit ToUnit) {
            return base.Channel.ConvertWeight(Weight, FromUnit, ToUnit);
        }
        
        public System.Threading.Tasks.Task<double> ConvertWeightAsync(double Weight, Aplikacja_na_projekt.ServiceReference2.WeightUnit FromUnit, Aplikacja_na_projekt.ServiceReference2.WeightUnit ToUnit) {
            return base.Channel.ConvertWeightAsync(Weight, FromUnit, ToUnit);
        }
    }
}
